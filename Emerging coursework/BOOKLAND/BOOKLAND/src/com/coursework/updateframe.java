/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.coursework;

import java.awt.Desktop;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author hp
 */
public class updateframe extends javax.swing.JFrame {
//GLOBAL DECLARATION

    DefaultTableModel dm;

    public updateframe() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jMenuItem2 = new javax.swing.JMenuItem();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        DataRecordTable = new javax.swing.JTable();
        dataRecord = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        UpdateBooksLabel = new javax.swing.JLabel();
        BookID = new javax.swing.JLabel();
        BookName = new javax.swing.JLabel();
        Category = new javax.swing.JLabel();
        Author = new javax.swing.JLabel();
        Price = new javax.swing.JLabel();
        Edition = new javax.swing.JLabel();
        NewEdition_Option = new javax.swing.JRadioButton();
        OldEdition_Option = new javax.swing.JRadioButton();
        Update_Button = new javax.swing.JButton();
        Clear_Button = new javax.swing.JButton();
        ReturnHome_Button = new javax.swing.JButton();
        BookID_Field = new javax.swing.JTextField();
        BookName_Field = new javax.swing.JTextField();
        Category_Combobox = new javax.swing.JComboBox<>();
        Author_Field = new javax.swing.JTextField();
        Price_Field = new javax.swing.JTextField();
        BookLandLabel = new javax.swing.JLabel();
        Slogan = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        File = new javax.swing.JMenu();
        Import = new javax.swing.JMenuItem();
        Export = new javax.swing.JMenuItem();
        Exit = new javax.swing.JMenuItem();
        Help = new javax.swing.JMenu();
        ManualGuide = new javax.swing.JMenuItem();

        jMenuItem2.setText("jMenuItem2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BOOK LAND");

        jPanel2.setBackground(new java.awt.Color(154, 185, 115));

        DataRecordTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book ID", "Book Name", "Category", "Author", "Editions", "price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        DataRecordTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DataRecordTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(DataRecordTable);

        dataRecord.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        dataRecord.setText("Data Records");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(dataRecord)
                        .addContainerGap(468, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dataRecord)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(154, 185, 115));

        UpdateBooksLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        UpdateBooksLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coursework/icons/Updates-icon.png"))); // NOI18N
        UpdateBooksLabel.setText("Update Books");

        BookID.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        BookID.setText("Book ID:");

        BookName.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        BookName.setText("Book Name:");

        Category.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Category.setText("Category:");

        Author.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Author.setText("Author:");

        Price.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Price.setText("Price:");

        Edition.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Edition.setText("Editions:");

        buttonGroup1.add(NewEdition_Option);
        NewEdition_Option.setText("New Editions");

        buttonGroup1.add(OldEdition_Option);
        OldEdition_Option.setText("Old Editions");

        Update_Button.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        Update_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coursework/icons/Updates-icon.png"))); // NOI18N
        Update_Button.setText("Update Books");
        Update_Button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Update_ButtonMouseClicked(evt);
            }
        });
        Update_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Update_ButtonActionPerformed(evt);
            }
        });

        Clear_Button.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        Clear_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coursework/icons/Clear-icon.png"))); // NOI18N
        Clear_Button.setText("Clear");
        Clear_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Clear_ButtonActionPerformed(evt);
            }
        });

        ReturnHome_Button.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ReturnHome_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coursework/icons/home-icon.png"))); // NOI18N
        ReturnHome_Button.setText("Return Home");
        ReturnHome_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnHome_ButtonActionPerformed(evt);
            }
        });

        Category_Combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Biography", "Fantasy", "Mystery", "Poetry", "Kid" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(UpdateBooksLabel))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Category)
                                    .addComponent(BookName)
                                    .addComponent(Author)
                                    .addComponent(Price)
                                    .addComponent(Edition)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addComponent(BookID)))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(BookName_Field, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BookID_Field, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Category_Combobox, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Author_Field, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Price_Field, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NewEdition_Option, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(OldEdition_Option, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Update_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Clear_Button))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(ReturnHome_Button)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(UpdateBooksLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BookID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BookID_Field, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BookName_Field, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BookName))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Category)
                    .addComponent(Category_Combobox, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Author)
                    .addComponent(Author_Field, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Price)
                    .addComponent(Price_Field, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Edition)
                    .addComponent(NewEdition_Option))
                .addGap(18, 18, 18)
                .addComponent(OldEdition_Option)
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Update_Button, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(Clear_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ReturnHome_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
        );

        BookLandLabel.setFont(new java.awt.Font("Harrington", 1, 24)); // NOI18N
        BookLandLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coursework/icons/Bookland.png"))); // NOI18N
        BookLandLabel.setText("Book Land");

        Slogan.setFont(new java.awt.Font("Segoe Script", 1, 16)); // NOI18N
        Slogan.setText("A book worm’s paradise...");

        File.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coursework/icons/File-icon.png"))); // NOI18N
        File.setText("File");

        Import.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Import.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coursework/icons/Excel-icon.png"))); // NOI18N
        Import.setText("Import Excel");
        Import.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImportActionPerformed(evt);
            }
        });
        File.add(Import);

        Export.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        Export.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coursework/icons/Excel-icon.png"))); // NOI18N
        Export.setText("Export Excel ");
        File.add(Export);

        Exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        Exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coursework/icons/close-icon.png"))); // NOI18N
        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        File.add(Exit);

        jMenuBar1.add(File);

        Help.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coursework/icons/help.png"))); // NOI18N
        Help.setText("Help");
        Help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HelpActionPerformed(evt);
            }
        });

        ManualGuide.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        ManualGuide.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coursework/icons/guide-icon.png"))); // NOI18N
        ManualGuide.setText("User Manual Guide");
        ManualGuide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ManualGuideActionPerformed(evt);
            }
        });
        Help.add(ManualGuide);

        jMenuBar1.add(Help);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(394, 394, 394)
                        .addComponent(Slogan, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(337, 337, 337)
                        .addComponent(BookLandLabel)))
                .addContainerGap(258, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BookLandLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Slogan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30))
        );

        setBounds(460, 100, 884, 733);
    }// </editor-fold>//GEN-END:initComponents

    private void ReturnHome_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnHome_ButtonActionPerformed
        // TODO add your handling code here:
        Homeframe home_frame = new Homeframe();
        home_frame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_ReturnHome_ButtonActionPerformed

    private void Update_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Update_ButtonActionPerformed
        //update the record of Table
        try { //checking for nulls
            if (BookID_Field.getText().isEmpty() || BookName_Field.getText().isEmpty() || Author_Field.getText().isEmpty()
                    || Price_Field.getText().isEmpty()) //checking for null values
            {
                JOptionPane.showMessageDialog(this, "Fill all the text fields or select one option from edition", "Error!", JOptionPane.ERROR_MESSAGE);
            } else {
                if (Integer.parseInt(Price_Field.getText()) < 1)//checking for zero or negative values
                {//checking for negative input
                    JOptionPane.showMessageDialog(this, "Please input valid values in the field !!", "Error!", JOptionPane.ERROR_MESSAGE);
                } else {
                    dm = (DefaultTableModel) DataRecordTable.getModel();
                    dm.setValueAt(BookID_Field.getText(), DataRecordTable.getSelectedRow(), 0);
                    dm.setValueAt(BookName_Field.getText(), DataRecordTable.getSelectedRow(), 1);
                    dm.setValueAt(Category_Combobox.getSelectedItem(), DataRecordTable.getSelectedRow(), 2);
                    dm.setValueAt(Author_Field.getText(), DataRecordTable.getSelectedRow(), 3);
                    dm.setValueAt(Price_Field.getText(), DataRecordTable.getSelectedRow(), 5);
                    if (NewEdition_Option.isSelected()) {
                        dm.setValueAt(NewEdition_Option.getText(), DataRecordTable.getSelectedRow(), 4);
                    } else if (OldEdition_Option.isSelected()) {
                        dm.setValueAt(OldEdition_Option.getText(), DataRecordTable.getSelectedRow(), 4);
                    }
                }
            }

        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Enter valid input", "Error!", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_Update_ButtonActionPerformed

    private void Clear_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Clear_ButtonActionPerformed

        if (BookID_Field.getText().equals("") || BookName_Field.getText().equals("") || Author_Field.getText().equals("")
                || Price_Field.getText().equals("")) //checking for null values
        {
            JOptionPane.showMessageDialog(this, "You don't have any values to clear.", "Message", JOptionPane.INFORMATION_MESSAGE); //display message
        } else {
            BookID_Field.setText("");
            BookName_Field.setText("");
            Author_Field.setText("");
            Price_Field.setText("");
            buttonGroup1.clearSelection();
        }

    }//GEN-LAST:event_Clear_ButtonActionPerformed

    private void ImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImportActionPerformed
        String filename;
        JFileChooser choose = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("files", "csv", "txt");
        choose.setFileFilter(filter);
        choose.showOpenDialog(null);
        File f = choose.getSelectedFile();
        filename = f.getAbsolutePath();

        try {
            FileReader fr = new FileReader(filename);
            BufferedReader br = new BufferedReader(fr);

            DefaultTableModel model = (DefaultTableModel) DataRecordTable.getModel();
            Object[] lines = br.lines().toArray();

            for (int i = 0; i < lines.length; i++) {
                String[] line = lines[i].toString().split(",");
                model.addRow(line);
            }
            JOptionPane.showMessageDialog(rootPane, "Data sucessfully imported from a .csv file.", "Successfully Imported from file path", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "File not found", "Error 404", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ImportActionPerformed

    private void HelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HelpActionPerformed

    }//GEN-LAST:event_HelpActionPerformed

    private void ManualGuideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ManualGuideActionPerformed
        // TODO add your handling code here:
        File file = new File("src\\Help\\User Manual Guide.pdf");
        try {
            Desktop.getDesktop().open(file);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "File not found");
        }
    }//GEN-LAST:event_ManualGuideActionPerformed

    private void Update_ButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Update_ButtonMouseClicked

    }//GEN-LAST:event_Update_ButtonMouseClicked

    private void DataRecordTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DataRecordTableMouseClicked
        int i = DataRecordTable.getSelectedRow();
        TableModel model = DataRecordTable.getModel();
        BookID_Field.setText(model.getValueAt(i, 0).toString());
        BookName_Field.setText(model.getValueAt(i, 1).toString());
        String category = model.getValueAt(i, 2).toString();
        switch (category) {
            case "Biography":
                Category_Combobox.setSelectedIndex(0);
                break;
            case "Fantasy":
                Category_Combobox.setSelectedIndex(1);
                break;
            case "Mystery":
                Category_Combobox.setSelectedIndex(2);
                break;
            case "Poetry":
                Category_Combobox.setSelectedIndex(3);
                break;
            case "Kid":
                Category_Combobox.setSelectedIndex(4);
                break;
        }

        Author_Field.setText(model.getValueAt(i, 3).toString());
        String Edition = model.getValueAt(i, 4).toString();
        if (Edition.equals("New Editions")) {
            NewEdition_Option.setSelected(true);
        } else {
            OldEdition_Option.setSelected(true);
        }
        Price_Field.setText(model.getValueAt(i, 5).toString());
    }//GEN-LAST:event_DataRecordTableMouseClicked

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
          //confirm dialog for exiting system
        int clearConfirmation = JOptionPane.showConfirmDialog(this, "Do you want exit the system?", "Exit", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (clearConfirmation == 0){
            this.dispose();
            JOptionPane.showMessageDialog(this,"System has been existed successfully !!.","Message",JOptionPane.INFORMATION_MESSAGE); //information display
        }else{
            JOptionPane.showMessageDialog(this,"Welcome back to BookLand!!.","Message",JOptionPane.INFORMATION_MESSAGE); //information display
        }
    }//GEN-LAST:event_ExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(updateframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(updateframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(updateframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(updateframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new updateframe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Author;
    private javax.swing.JTextField Author_Field;
    private javax.swing.JLabel BookID;
    private javax.swing.JTextField BookID_Field;
    private javax.swing.JLabel BookLandLabel;
    private javax.swing.JLabel BookName;
    private javax.swing.JTextField BookName_Field;
    private javax.swing.JLabel Category;
    private javax.swing.JComboBox<String> Category_Combobox;
    private javax.swing.JButton Clear_Button;
    private javax.swing.JTable DataRecordTable;
    private javax.swing.JLabel Edition;
    private javax.swing.JMenuItem Exit;
    private javax.swing.JMenuItem Export;
    private javax.swing.JMenu File;
    private javax.swing.JMenu Help;
    private javax.swing.JMenuItem Import;
    private javax.swing.JMenuItem ManualGuide;
    private javax.swing.JRadioButton NewEdition_Option;
    private javax.swing.JRadioButton OldEdition_Option;
    private javax.swing.JLabel Price;
    private javax.swing.JTextField Price_Field;
    private javax.swing.JButton ReturnHome_Button;
    private javax.swing.JLabel Slogan;
    private javax.swing.JLabel UpdateBooksLabel;
    private javax.swing.JButton Update_Button;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel dataRecord;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
